@model PhoneBook.ViewModels.PersonViewModel

<h2>Książka adresowa</h2>

@*<div class="row">
        <div class="col-6 offset-3">
            <form asp-action="Index" asp-controller="Person" method="get">
                <div class="form-group">
                    <label class="control-label">Wyszukaj Nazwisko</label>
                    <input type="text" name="filterLastName" class="form-control" value="@Model.FilterLastName" />
                    <input type="hidden" name="page" value="1" />
                </div>
                <div class="form-group">
                    <input type="submit" value="Wyszukaj" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>*@

<p class="d-inline-block">
    <a asp-action="Add" asp-controller="Person" class="btn btn-primary">Dodaj nowy</a>
</p>
<div class="d-inline-block float-right">
    <form action="/Person/Index" method="get" class="form-inline">
        <label>Liczba wierszy: </label>
        <input type="hidden" name="page" value="1" />
        <input type="hidden" name="filterLastName" value="@Model.FilterLastName" />
        <input type="number" name="linesPerPage" value="@Model.LinesPerPage" min="10" max="50" step="10"/>
        <input type="submit" value="zastosuj" class="btn btn-primary btn-sm" />
    </form>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.DummyPerson.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DummyPerson.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DummyPerson.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DummyPerson.Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DummyPerson.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DummyPerson.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DummyPerson.Updated)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.PersonList)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Updated)
                </td>
                <td>
                    @Html.ActionLink("Edytuj", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Usuń", "Remove", new { id = item.Id })
                </td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <td colspan="8" class="text-center">
                <div class="btn-group d-inline-block" role="group" aria-label="pagination" >

                    <a asp-action="Index" asp-controller="Person" asp-route-page="@((int)Model.CurrentPage - 1)" asp-route-filterLastName="@Model.FilterLastName" asp-route-linesPerPage="@Model.LinesPerPage" class="btn btn-default @((int)Model.CurrentPage == 1 ? "disabled" : "")">&laquo;</a>

                    @if ((int)Model.TotalPages < 8)
                    {
                        for (int i = 1; i <= (int)Model.TotalPages; i++)
                        {
                            <a asp-action="Index" asp-controller="Person" asp-route-page="@i" asp-route-filterLastName="@Model.FilterLastName" asp-route-linesPerPage="@Model.LinesPerPage" class=@(@i == (int)Model.CurrentPage ? "btn btn-primary" : "btn btn-default")>@i</a>
                        }
                    }

                    @if ((int)Model.TotalPages >= 8)
                    {
                        if ((int)Model.CurrentPage >= 3)
                        {
                            <a asp-action="Index" asp-controller="Person" asp-route-page="1" asp-route-filterLastName="@Model.FilterLastName" asp-route-linesPerPage="@Model.LinesPerPage" class="btn btn-default">1</a>
                        }
                        if ((int)Model.CurrentPage >= 4)
                        {
                            <a class="btn btn-default">..</a>
                        }
                        if ((int)Model.CurrentPage >= 2)
                        {
                            <a asp-action="Index" asp-controller="Person" asp-route-page="@((int)Model.CurrentPage - 1)" asp-route-filterLastName="@Model.FilterLastName" asp-route-linesPerPage="@Model.LinesPerPage" class="btn btn-default">@((int)Model.CurrentPage - 1)</a>
                        }

                        <a asp-action="Index" asp-controller="Person" asp-route-page="@((int)Model.CurrentPage)" asp-route-filterLastName="@Model.FilterLastName" asp-route-linesPerPage="@Model.LinesPerPage" class="btn btn-primary">@((int)Model.CurrentPage)</a>

                        if ((int)Model.CurrentPage <= (int)Model.TotalPages - 1)
                        {
                            <a asp-action="Index" asp-controller="Person" asp-route-page="@((int)Model.CurrentPage + 1)" asp-route-filterLastName="@Model.FilterLastName" asp-route-linesPerPage="@Model.LinesPerPage" class="btn btn-default">@((int)Model.CurrentPage + 1)</a>
                        }
                        if ((int)Model.CurrentPage <= (int)Model.TotalPages - 3)
                        {
                            <a class="btn btn-default">..</a>
                        }
                        if ((int)Model.CurrentPage <= (int)Model.TotalPages - 2)
                        {
                            <a asp-action="Index" asp-controller="Person" asp-route-page="@((int)Model.TotalPages)" asp-route-filterLastName="@Model.FilterLastName" asp-route-linesPerPage="@Model.LinesPerPage" class="btn btn-default">@((int)Model.TotalPages)</a>
                        }
                    }

                    <a asp-action="Index" asp-controller="Person" asp-route-page="@((int)Model.CurrentPage + 1)" asp-route-filterLastName="@Model.FilterLastName" asp-route-linesPerPage="@Model.LinesPerPage" class="btn btn-default @((int)Model.CurrentPage == (int)Model.TotalPages ? "disabled" : "")">&raquo;</a>
                </div>
                <div class="d-inline-block float-right">
                    <form action="/Person/Index" method="get" class="form-inline">
                        <input type="submit" value="Idż do" class="btn btn-primary btn-sm" />
                        <input type="number" name="page" class="form-control form-control-sm" value="" min="1" max="@Model.TotalPages" />
                        <input type="hidden" name="filterLastName" value="@Model.FilterLastName" />
                        <input type="hidden" name="linesPerPage" value="@Model.LinesPerPage" />
                    </form>
                </div>
            </td>
        </tr>
    </tfoot>
</table>

@*<div class="btn-group" role="group" aria-label="Strony">
        @for (int i = 1; i <= (int)Model.TotalPages; i++)
        {
            if (@i == Model.CurrentPage)
            {
                <a asp-action="Index" asp-controller="Person" asp-route-page="@i" class=" btn btn-primary">@i</a>
            }
            else
            {
                <a asp-action="Index" asp-controller="Person" asp-route-page="@i" class=" btn btn-default">@i</a>
            }

        }
    </div>*@
